//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppSKStream
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Gestion_video_skstreamContainer : DbContext
    {
        public Gestion_video_skstreamContainer()
            : base("name=Gestion_video_skstreamContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Videos> VideosSet { get; set; }
        public virtual DbSet<Sommaire_series> Sommaire_seriesSet { get; set; }
    
        public virtual int insertion_animer_sommaireseries_detailanimer(string titre, Nullable<int> saison, Nullable<int> episode, string lien)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var saisonParameter = saison.HasValue ?
                new ObjectParameter("saison", saison) :
                new ObjectParameter("saison", typeof(int));
    
            var episodeParameter = episode.HasValue ?
                new ObjectParameter("episode", episode) :
                new ObjectParameter("episode", typeof(int));
    
            var lienParameter = lien != null ?
                new ObjectParameter("lien", lien) :
                new ObjectParameter("lien", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertion_animer_sommaireseries_detailanimer", titreParameter, saisonParameter, episodeParameter, lienParameter);
        }
    
        public virtual int insertion_series_sommaireseries_detailseries(string titre, Nullable<int> saison, Nullable<int> episode, string lien)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var saisonParameter = saison.HasValue ?
                new ObjectParameter("saison", saison) :
                new ObjectParameter("saison", typeof(int));
    
            var episodeParameter = episode.HasValue ?
                new ObjectParameter("episode", episode) :
                new ObjectParameter("episode", typeof(int));
    
            var lienParameter = lien != null ?
                new ObjectParameter("lien", lien) :
                new ObjectParameter("lien", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertion_series_sommaireseries_detailseries", titreParameter, saisonParameter, episodeParameter, lienParameter);
        }
    
        public virtual int insertion_videos_films(string titre, string acteure, string genre, string pays, Nullable<System.TimeSpan> duree, string creer_par, string categorie, string description, string filefullname, Nullable<int> annee_production, Nullable<System.DateTime> date_sortie, string lien)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var acteureParameter = acteure != null ?
                new ObjectParameter("acteure", acteure) :
                new ObjectParameter("acteure", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("genre", genre) :
                new ObjectParameter("genre", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var dureeParameter = duree.HasValue ?
                new ObjectParameter("duree", duree) :
                new ObjectParameter("duree", typeof(System.TimeSpan));
    
            var creer_parParameter = creer_par != null ?
                new ObjectParameter("creer_par", creer_par) :
                new ObjectParameter("creer_par", typeof(string));
    
            var categorieParameter = categorie != null ?
                new ObjectParameter("categorie", categorie) :
                new ObjectParameter("categorie", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var filefullnameParameter = filefullname != null ?
                new ObjectParameter("filefullname", filefullname) :
                new ObjectParameter("filefullname", typeof(string));
    
            var annee_productionParameter = annee_production.HasValue ?
                new ObjectParameter("annee_production", annee_production) :
                new ObjectParameter("annee_production", typeof(int));
    
            var date_sortieParameter = date_sortie.HasValue ?
                new ObjectParameter("date_sortie", date_sortie) :
                new ObjectParameter("date_sortie", typeof(System.DateTime));
    
            var lienParameter = lien != null ?
                new ObjectParameter("lien", lien) :
                new ObjectParameter("lien", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertion_videos_films", titreParameter, acteureParameter, genreParameter, paysParameter, dureeParameter, creer_parParameter, categorieParameter, descriptionParameter, filefullnameParameter, annee_productionParameter, date_sortieParameter, lienParameter);
        }
    
        public virtual int insertion_videos_videosseries_animer(string titre, string acteure, string genre, string pays, Nullable<System.TimeSpan> duree, string creer_par, string categorie, string description, string filefullname, Nullable<int> nbsaison, Nullable<int> nbepisode, Nullable<int> annee_lancement)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var acteureParameter = acteure != null ?
                new ObjectParameter("acteure", acteure) :
                new ObjectParameter("acteure", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("genre", genre) :
                new ObjectParameter("genre", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var dureeParameter = duree.HasValue ?
                new ObjectParameter("duree", duree) :
                new ObjectParameter("duree", typeof(System.TimeSpan));
    
            var creer_parParameter = creer_par != null ?
                new ObjectParameter("creer_par", creer_par) :
                new ObjectParameter("creer_par", typeof(string));
    
            var categorieParameter = categorie != null ?
                new ObjectParameter("categorie", categorie) :
                new ObjectParameter("categorie", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var filefullnameParameter = filefullname != null ?
                new ObjectParameter("filefullname", filefullname) :
                new ObjectParameter("filefullname", typeof(string));
    
            var nbsaisonParameter = nbsaison.HasValue ?
                new ObjectParameter("nbsaison", nbsaison) :
                new ObjectParameter("nbsaison", typeof(int));
    
            var nbepisodeParameter = nbepisode.HasValue ?
                new ObjectParameter("nbepisode", nbepisode) :
                new ObjectParameter("nbepisode", typeof(int));
    
            var annee_lancementParameter = annee_lancement.HasValue ?
                new ObjectParameter("annee_lancement", annee_lancement) :
                new ObjectParameter("annee_lancement", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertion_videos_videosseries_animer", titreParameter, acteureParameter, genreParameter, paysParameter, dureeParameter, creer_parParameter, categorieParameter, descriptionParameter, filefullnameParameter, nbsaisonParameter, nbepisodeParameter, annee_lancementParameter);
        }
    
        public virtual int insertion_videos_videosseries_series(string titre, string acteure, string genre, string pays, Nullable<System.TimeSpan> duree, string creer_par, string categorie, string description, string filefullname, Nullable<int> nbsaison, Nullable<int> nbepisode, Nullable<int> annee_lancement)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var acteureParameter = acteure != null ?
                new ObjectParameter("acteure", acteure) :
                new ObjectParameter("acteure", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("genre", genre) :
                new ObjectParameter("genre", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var dureeParameter = duree.HasValue ?
                new ObjectParameter("duree", duree) :
                new ObjectParameter("duree", typeof(System.TimeSpan));
    
            var creer_parParameter = creer_par != null ?
                new ObjectParameter("creer_par", creer_par) :
                new ObjectParameter("creer_par", typeof(string));
    
            var categorieParameter = categorie != null ?
                new ObjectParameter("categorie", categorie) :
                new ObjectParameter("categorie", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var filefullnameParameter = filefullname != null ?
                new ObjectParameter("filefullname", filefullname) :
                new ObjectParameter("filefullname", typeof(string));
    
            var nbsaisonParameter = nbsaison.HasValue ?
                new ObjectParameter("nbsaison", nbsaison) :
                new ObjectParameter("nbsaison", typeof(int));
    
            var nbepisodeParameter = nbepisode.HasValue ?
                new ObjectParameter("nbepisode", nbepisode) :
                new ObjectParameter("nbepisode", typeof(int));
    
            var annee_lancementParameter = annee_lancement.HasValue ?
                new ObjectParameter("annee_lancement", annee_lancement) :
                new ObjectParameter("annee_lancement", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertion_videos_videosseries_series", titreParameter, acteureParameter, genreParameter, paysParameter, dureeParameter, creer_parParameter, categorieParameter, descriptionParameter, filefullnameParameter, nbsaisonParameter, nbepisodeParameter, annee_lancementParameter);
        }
    }
}
